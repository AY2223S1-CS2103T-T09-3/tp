@startuml
!include style.puml

actor  user     as user

box Ui UI_COLOR_T1
participant ":MainWindow"  as mainWindow UI_COLOR
participant ":ResultDisplay" as resultDisplay UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":logicManager"  as logicManager LOGIC_COLOR
participant ":hrProParser"  as hrProParser LOGIC_COLOR
participant ":hrProParser"  as hrProParser LOGIC_COLOR
participant ":sortTaskCommand"  as sortTaskCommand LOGIC_COLOR
participant ":CommandResult" as commandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":modelManager" as modelManager MODEL_COLOR
participant ":hrPro" as hrPro MODEL_COLOR
end box

user -> mainWindow : input sorttask
activate mainWindow

mainWindow -> logicManager : execute "sorttask"
activate logicManager

logicManager -> hrProParser : parseCommand("sorttask")
activate hrProParser

create sortTaskCommand
hrProParser -> sortTaskCommand
activate sortTaskCommand

sortTaskCommand --> hrProParser
deactivate sortTaskCommand

hrProParser --> logicManager
deactivate hrProParser

logicManager -> sortTaskCommand : execute()
activate sortTaskCommand

sortTaskCommand -> modelManager : sortTasks()
activate modelManager

modelManager -> hrPro : sortTasks()
activate hrPro

hrPro --> modelManager

autoActivate on
modelManager -> modelManager :updateFilteredTaskList(Predicate)
return

modelManager --> sortTaskCommand

create commandResult
sortTaskCommand -> commandResult : new()
activate commandResult

commandResult --> sortTaskCommand
deactivate commandResult

sortTaskCommand --> logicManager

logicManager --> mainWindow

mainWindow -> resultDisplay : setFeedbackToUser(Tasks are now sorted by deadline!)

resultDisplay --> mainWindow

mainWindow --> user : Tasks are now sorted by deadline!

@enduml
